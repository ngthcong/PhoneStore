// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneStore.Data;

namespace PhoneStore.Migrations
{
    [DbContext(typeof(PhoneStoreDBContext))]
    partial class PhoneStoreDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhoneStore.Data.BrandGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnName("brand_id")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnName("type_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("TypeId");

                    b.ToTable("brand_group");
                });

            modelBuilder.Entity("PhoneStore.Data.Employee", b =>
                {
                    b.Property<int>("EmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("em_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnName("date_created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EmBirthday")
                        .HasColumnName("em_birthday")
                        .HasColumnType("date");

                    b.Property<string>("EmEmail")
                        .HasColumnName("em_email")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("EmIdentityNumber")
                        .HasColumnName("em_identity_number")
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("EmName")
                        .HasColumnName("em_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EmNote")
                        .HasColumnName("em_note")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("EmPass")
                        .HasColumnName("em_pass")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("EmPhone")
                        .HasColumnName("em_phone")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("EmRoleId")
                        .HasColumnName("em_role_id")
                        .HasColumnType("int");

                    b.Property<string>("EmSalt")
                        .HasColumnName("em_salt")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<int?>("EmShiftId")
                        .HasColumnName("em_shift_id")
                        .HasColumnType("int");

                    b.Property<bool?>("EmStatus")
                        .HasColumnName("em_status")
                        .HasColumnType("bit");

                    b.HasKey("EmId")
                        .HasName("PK__employee__ABD24D7FFB0615FA");

                    b.HasIndex("EmRoleId");

                    b.HasIndex("EmShiftId");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("PhoneStore.Data.EmployeeRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("role_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnName("role_name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("RoleId")
                        .HasName("PK__employee__760965CC31E2ACB5");

                    b.ToTable("employee_role");
                });

            modelBuilder.Entity("PhoneStore.Data.EmployeeShift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("shift_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShiftEndTime")
                        .HasColumnName("shift_end_time")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<int?>("ShiftNumber")
                        .HasColumnName("shift_number")
                        .HasColumnType("int");

                    b.Property<string>("ShiftStartTime")
                        .HasColumnName("shift_start_time")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.HasKey("ShiftId")
                        .HasName("PK__employee__7B267220E0959DF2");

                    b.ToTable("employee_shift");
                });

            modelBuilder.Entity("PhoneStore.Data.EmployeeTimekeeper", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("EmId")
                        .HasColumnName("em_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnName("time_in")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnName("time_out")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("employee_timekeeper");
                });

            modelBuilder.Entity("PhoneStore.Data.Invoice", b =>
                {
                    b.Property<string>("InvId")
                        .HasColumnName("inv_id")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnName("date_created")
                        .HasColumnType("datetime");

                    b.Property<string>("InvCusAddress")
                        .HasColumnName("inv_cus_address")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("InvCusEmail")
                        .HasColumnName("inv_cus_email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("InvCusName")
                        .HasColumnName("inv_cus_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("InvCusPhone")
                        .HasColumnName("inv_cus_phone")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("InvDate")
                        .HasColumnName("inv_date")
                        .HasColumnType("datetime");

                    b.Property<int?>("InvDeliveryMethod")
                        .HasColumnName("inv_delivery_method")
                        .HasColumnType("int");

                    b.Property<int?>("InvEmId")
                        .HasColumnName("inv_em_id")
                        .HasColumnType("int");

                    b.Property<string>("InvNote")
                        .HasColumnName("inv_note")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("InvPaymentMethod")
                        .HasColumnName("inv_payment_method")
                        .HasColumnType("int");

                    b.Property<int?>("InvStatus")
                        .HasColumnName("inv_status")
                        .HasColumnType("int");

                    b.HasKey("InvId")
                        .HasName("PK__invoice__A8749C298DA76746");

                    b.ToTable("invoice");
                });

            modelBuilder.Entity("PhoneStore.Data.InvoiceDetail", b =>
                {
                    b.Property<string>("InvDetailId")
                        .HasColumnName("inv_detail_id")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<int?>("ProId")
                        .HasColumnName("pro_id")
                        .HasColumnType("int");

                    b.Property<double?>("ProPrice")
                        .HasColumnName("pro_price")
                        .HasColumnType("float");

                    b.Property<int?>("ProQty")
                        .HasColumnName("pro_qty")
                        .HasColumnType("int");

                    b.Property<int?>("VariId")
                        .HasColumnName("vari_id")
                        .HasColumnType("int");

                    b.HasKey("InvDetailId")
                        .HasName("PK__invoice___5506AA2C95F5A101");

                    b.HasIndex("ProId");

                    b.HasIndex("VariId");

                    b.ToTable("invoice_detail");
                });

            modelBuilder.Entity("PhoneStore.Data.ProBrand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("brand_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandLogo")
                        .HasColumnName("brand_logo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BrandName")
                        .HasColumnName("brand_name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("BrandId")
                        .HasName("PK__pro_bran__5E5A8E2725B37FDC");

                    b.ToTable("pro_brand");
                });

            modelBuilder.Entity("PhoneStore.Data.ProGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("group_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GroupName")
                        .HasColumnName("group_name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("GroupId")
                        .HasName("PK__pro_grou__D57795A0E35E3725");

                    b.ToTable("pro_group");
                });

            modelBuilder.Entity("PhoneStore.Data.ProSpecification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProId")
                        .HasColumnName("pro_id")
                        .HasColumnType("int");

                    b.Property<int?>("SpecId")
                        .HasColumnName("spec_id")
                        .HasColumnType("int");

                    b.Property<string>("SpecValue")
                        .HasColumnName("spec_value")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ProId");

                    b.HasIndex("SpecId");

                    b.ToTable("pro_specification");
                });

            modelBuilder.Entity("PhoneStore.Data.ProType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnName("type_name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("TypeId")
                        .HasName("PK__pro_type__2C0005986A95610F");

                    b.HasIndex("GroupId");

                    b.ToTable("pro_type");
                });

            modelBuilder.Entity("PhoneStore.Data.ProVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasColumnName("color")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnName("date_created")
                        .HasColumnType("datetime");

                    b.Property<string>("ProColorIcon")
                        .HasColumnName("pro_color_icon")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ProColorImages")
                        .HasColumnName("pro_color_images")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int?>("ProId")
                        .HasColumnName("pro_id")
                        .HasColumnType("int");

                    b.Property<string>("ProNote")
                        .HasColumnName("pro_note")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<double?>("ProQty")
                        .HasColumnName("pro_qty")
                        .HasColumnType("float");

                    b.Property<bool?>("ProStatus")
                        .HasColumnName("pro_status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProId");

                    b.ToTable("pro_variant");
                });

            modelBuilder.Entity("PhoneStore.Data.ProView", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("DateViewed")
                        .HasColumnName("date_viewed")
                        .HasColumnType("datetime");

                    b.Property<string>("IpAddress")
                        .HasColumnName("ip_address")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ProId")
                        .HasColumnName("pro_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProId");

                    b.ToTable("pro_view");
                });

            modelBuilder.Entity("PhoneStore.Data.Product", b =>
                {
                    b.Property<int>("ProId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pro_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnName("date_created")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProBrandId")
                        .HasColumnName("pro_brand_id")
                        .HasColumnType("int");

                    b.Property<string>("ProDescription")
                        .HasColumnName("pro_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProGroupId")
                        .HasColumnName("pro_group_id")
                        .HasColumnType("int");

                    b.Property<string>("ProImage")
                        .HasColumnName("pro_image")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("ProName")
                        .HasColumnName("pro_name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double?>("ProRetailPrice")
                        .HasColumnName("pro_retail_price")
                        .HasColumnType("float");

                    b.Property<double?>("ProSalePrice")
                        .HasColumnName("pro_sale_price")
                        .HasColumnType("float");

                    b.Property<bool?>("ProStatus")
                        .HasColumnName("pro_status")
                        .HasColumnType("bit");

                    b.Property<int?>("ProTypeId")
                        .HasColumnName("pro_type_id")
                        .HasColumnType("int");

                    b.HasKey("ProId")
                        .HasName("PK__product__335E4CA60C961172");

                    b.HasIndex("ProBrandId");

                    b.HasIndex("ProGroupId");

                    b.HasIndex("ProTypeId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("PhoneStore.Data.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnName("date_created")
                        .HasColumnType("datetime");

                    b.Property<bool?>("PromStatus")
                        .HasColumnName("prom_status")
                        .HasColumnType("bit");

                    b.Property<double?>("PromValue")
                        .HasColumnName("prom_value")
                        .HasColumnType("float");

                    b.Property<DateTime?>("TimeEnd")
                        .HasColumnName("time_end")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TimeStart")
                        .HasColumnName("time_start")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("promotion");
                });

            modelBuilder.Entity("PhoneStore.Data.Specification", b =>
                {
                    b.Property<int>("SpecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("spec_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SpecName")
                        .HasColumnName("spec_name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("SpecId")
                        .HasName("PK__specific__F670C567ED9ED291");

                    b.ToTable("specification");
                });

            modelBuilder.Entity("PhoneStore.Data.BrandGroup", b =>
                {
                    b.HasOne("PhoneStore.Data.ProGroup", "Group")
                        .WithMany("BrandGroup")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("fk_brand_group_group_id");

                    b.HasOne("PhoneStore.Data.ProType", "Type")
                        .WithMany("BrandGroup")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_brand_group_type_id");
                });

            modelBuilder.Entity("PhoneStore.Data.Employee", b =>
                {
                    b.HasOne("PhoneStore.Data.EmployeeRole", "EmRole")
                        .WithMany("Employee")
                        .HasForeignKey("EmRoleId")
                        .HasConstraintName("fk_employee_role_id");

                    b.HasOne("PhoneStore.Data.EmployeeShift", "EmShift")
                        .WithMany("Employee")
                        .HasForeignKey("EmShiftId")
                        .HasConstraintName("fk_employee_shift_id");
                });

            modelBuilder.Entity("PhoneStore.Data.InvoiceDetail", b =>
                {
                    b.HasOne("PhoneStore.Data.Product", "Pro")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("ProId")
                        .HasConstraintName("fk_invoice_detail_pro_id");

                    b.HasOne("PhoneStore.Data.ProVariant", "Vari")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("VariId")
                        .HasConstraintName("fk_invoice_detail_vari_id");
                });

            modelBuilder.Entity("PhoneStore.Data.ProSpecification", b =>
                {
                    b.HasOne("PhoneStore.Data.Product", "Pro")
                        .WithMany("ProSpecification")
                        .HasForeignKey("ProId")
                        .HasConstraintName("fk_pro_specification_pro_id");

                    b.HasOne("PhoneStore.Data.Specification", "Spec")
                        .WithMany("ProSpecification")
                        .HasForeignKey("SpecId")
                        .HasConstraintName("fk_pro_specification_spec_id");
                });

            modelBuilder.Entity("PhoneStore.Data.ProType", b =>
                {
                    b.HasOne("PhoneStore.Data.ProGroup", "Group")
                        .WithMany("ProType")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("fk_pro_type_group_id");
                });

            modelBuilder.Entity("PhoneStore.Data.ProVariant", b =>
                {
                    b.HasOne("PhoneStore.Data.Product", "Pro")
                        .WithMany("ProVariant")
                        .HasForeignKey("ProId")
                        .HasConstraintName("fk_pro_variant_pro_id");
                });

            modelBuilder.Entity("PhoneStore.Data.ProView", b =>
                {
                    b.HasOne("PhoneStore.Data.Product", "Pro")
                        .WithMany("ProView")
                        .HasForeignKey("ProId")
                        .HasConstraintName("fk_pro_view_pro_id");
                });

            modelBuilder.Entity("PhoneStore.Data.Product", b =>
                {
                    b.HasOne("PhoneStore.Data.ProBrand", "ProBrand")
                        .WithMany("Product")
                        .HasForeignKey("ProBrandId")
                        .HasConstraintName("fk_product_brand");

                    b.HasOne("PhoneStore.Data.ProGroup", "ProGroup")
                        .WithMany("Product")
                        .HasForeignKey("ProGroupId")
                        .HasConstraintName("fk_product_group");

                    b.HasOne("PhoneStore.Data.ProType", "ProType")
                        .WithMany("Product")
                        .HasForeignKey("ProTypeId")
                        .HasConstraintName("fk_product_type");
                });
#pragma warning restore 612, 618
        }
    }
}
